// Code generated by protoc-gen-go. DO NOT EDIT.
// source: acfts.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SignRequest struct {
	Transaction          *Transaction `protobuf:"bytes,1,opt,name=Transaction,proto3" json:"Transaction,omitempty"`
	Signature            *ECDSASig    `protobuf:"bytes,2,opt,name=Signature,proto3" json:"Signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SignRequest) Reset()         { *m = SignRequest{} }
func (m *SignRequest) String() string { return proto.CompactTextString(m) }
func (*SignRequest) ProtoMessage()    {}
func (*SignRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32417518204ad130, []int{0}
}

func (m *SignRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignRequest.Unmarshal(m, b)
}
func (m *SignRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignRequest.Marshal(b, m, deterministic)
}
func (m *SignRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignRequest.Merge(m, src)
}
func (m *SignRequest) XXX_Size() int {
	return xxx_messageInfo_SignRequest.Size(m)
}
func (m *SignRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignRequest proto.InternalMessageInfo

func (m *SignRequest) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *SignRequest) GetSignature() *ECDSASig {
	if m != nil {
		return m.Signature
	}
	return nil
}

type Transaction struct {
	Inputs               []*Value `protobuf:"bytes,1,rep,name=Inputs,proto3" json:"Inputs,omitempty"`
	Outputs              []*Value `protobuf:"bytes,2,rep,name=Outputs,proto3" json:"Outputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_32417518204ad130, []int{1}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetInputs() []*Value {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *Transaction) GetOutputs() []*Value {
	if m != nil {
		return m.Outputs
	}
	return nil
}

type Value struct {
	Address              []byte      `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	Amount               int32       `protobuf:"varint,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Id                   []byte      `protobuf:"bytes,3,opt,name=Id,proto3" json:"Id,omitempty"`
	Signatures           []*ECDSASig `protobuf:"bytes,4,rep,name=Signatures,proto3" json:"Signatures,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Value) Reset()         { *m = Value{} }
func (m *Value) String() string { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()    {}
func (*Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_32417518204ad130, []int{2}
}

func (m *Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Value.Unmarshal(m, b)
}
func (m *Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Value.Marshal(b, m, deterministic)
}
func (m *Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Value.Merge(m, src)
}
func (m *Value) XXX_Size() int {
	return xxx_messageInfo_Value.Size(m)
}
func (m *Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Value proto.InternalMessageInfo

func (m *Value) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Value) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Value) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Value) GetSignatures() []*ECDSASig {
	if m != nil {
		return m.Signatures
	}
	return nil
}

type ECDSASig struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	R                    []byte   `protobuf:"bytes,2,opt,name=R,proto3" json:"R,omitempty"`
	S                    []byte   `protobuf:"bytes,3,opt,name=S,proto3" json:"S,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ECDSASig) Reset()         { *m = ECDSASig{} }
func (m *ECDSASig) String() string { return proto.CompactTextString(m) }
func (*ECDSASig) ProtoMessage()    {}
func (*ECDSASig) Descriptor() ([]byte, []int) {
	return fileDescriptor_32417518204ad130, []int{3}
}

func (m *ECDSASig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ECDSASig.Unmarshal(m, b)
}
func (m *ECDSASig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ECDSASig.Marshal(b, m, deterministic)
}
func (m *ECDSASig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ECDSASig.Merge(m, src)
}
func (m *ECDSASig) XXX_Size() int {
	return xxx_messageInfo_ECDSASig.Size(m)
}
func (m *ECDSASig) XXX_DiscardUnknown() {
	xxx_messageInfo_ECDSASig.DiscardUnknown(m)
}

var xxx_messageInfo_ECDSASig proto.InternalMessageInfo

func (m *ECDSASig) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *ECDSASig) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

func (m *ECDSASig) GetS() []byte {
	if m != nil {
		return m.S
	}
	return nil
}

type SignReply struct {
	Outputs              []*Value `protobuf:"bytes,1,rep,name=Outputs,proto3" json:"Outputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignReply) Reset()         { *m = SignReply{} }
func (m *SignReply) String() string { return proto.CompactTextString(m) }
func (*SignReply) ProtoMessage()    {}
func (*SignReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_32417518204ad130, []int{4}
}

func (m *SignReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignReply.Unmarshal(m, b)
}
func (m *SignReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignReply.Marshal(b, m, deterministic)
}
func (m *SignReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignReply.Merge(m, src)
}
func (m *SignReply) XXX_Size() int {
	return xxx_messageInfo_SignReply.Size(m)
}
func (m *SignReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SignReply.DiscardUnknown(m)
}

var xxx_messageInfo_SignReply proto.InternalMessageInfo

func (m *SignReply) GetOutputs() []*Value {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func init() {
	proto.RegisterType((*SignRequest)(nil), "proto.SignRequest")
	proto.RegisterType((*Transaction)(nil), "proto.Transaction")
	proto.RegisterType((*Value)(nil), "proto.Value")
	proto.RegisterType((*ECDSASig)(nil), "proto.ECDSASig")
	proto.RegisterType((*SignReply)(nil), "proto.SignReply")
}

func init() {
	proto.RegisterFile("acfts.proto", fileDescriptor_32417518204ad130)
}

var fileDescriptor_32417518204ad130 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0x36, 0xdd, 0xda, 0xe9, 0x6b, 0x51, 0x79, 0x07, 0x09, 0x9e, 0x46, 0x10, 0xd9, 0xc5, 0x0a,
	0x9d, 0xe0, 0xd5, 0x32, 0x15, 0x7a, 0x12, 0x92, 0xe1, 0xc5, 0x53, 0x5d, 0xe3, 0x28, 0xd4, 0xb6,
	0x36, 0xc9, 0x61, 0xfe, 0xf5, 0xd2, 0xac, 0xd5, 0x0e, 0xc7, 0x4e, 0xe5, 0x7d, 0x3f, 0xfa, 0xbd,
	0x2f, 0x0f, 0xfc, 0x74, 0xf5, 0xa1, 0x55, 0x58, 0x37, 0x95, 0xae, 0xd0, 0xb5, 0x1f, 0xd6, 0x80,
	0x2f, 0xf2, 0x75, 0xc9, 0xe5, 0x97, 0x91, 0x4a, 0xe3, 0x1d, 0xf8, 0xcb, 0x26, 0x2d, 0x55, 0xba,
	0xd2, 0x79, 0x55, 0x52, 0x32, 0x25, 0x33, 0x3f, 0xc2, 0xad, 0x25, 0x1c, 0x30, 0x7c, 0x28, 0xc3,
	0x1b, 0x38, 0x69, 0x7f, 0x92, 0x6a, 0xd3, 0x48, 0xea, 0x58, 0xcf, 0x59, 0xe7, 0x79, 0x5a, 0x3c,
	0x8a, 0x58, 0xe4, 0x6b, 0xfe, 0xa7, 0x60, 0x6f, 0x3b, 0x21, 0x78, 0x05, 0x5e, 0x52, 0xd6, 0x46,
	0x2b, 0x4a, 0xa6, 0xa3, 0x99, 0x1f, 0x05, 0x9d, 0xf5, 0x35, 0x2d, 0x8c, 0xe4, 0x1d, 0x87, 0xd7,
	0x30, 0x79, 0x31, 0xda, 0xca, 0x9c, 0x3d, 0xb2, 0x9e, 0x64, 0xdf, 0xe0, 0x5a, 0x04, 0x29, 0x4c,
	0xe2, 0x2c, 0x6b, 0xa4, 0x52, 0xb6, 0x46, 0xc0, 0xfb, 0x11, 0x2f, 0xc0, 0x8b, 0x3f, 0x2b, 0x53,
	0x6a, 0xbb, 0xab, 0xcb, 0xbb, 0x09, 0x4f, 0xc1, 0x49, 0x32, 0x3a, 0xb2, 0x62, 0x27, 0xc9, 0xf0,
	0x16, 0xe0, 0x77, 0x69, 0x45, 0xc7, 0x36, 0xf5, 0x5f, 0xaf, 0x81, 0x84, 0x3d, 0xc0, 0x71, 0x8f,
	0x1f, 0x88, 0x0f, 0x80, 0x70, 0x9b, 0x1c, 0x70, 0xc2, 0xdb, 0x49, 0x74, 0x99, 0x44, 0xb0, 0xf9,
	0xf6, 0x25, 0xb9, 0xac, 0x8b, 0xcd, 0xb0, 0x32, 0x39, 0x50, 0x39, 0xba, 0x07, 0x37, 0x5e, 0x3c,
	0x2f, 0x05, 0x86, 0x30, 0x6e, 0xdd, 0xd8, 0x1f, 0x6c, 0x70, 0xd9, 0xcb, 0xf3, 0x1d, 0xac, 0x2e,
	0x36, 0xec, 0xe8, 0xdd, 0xb3, 0xd0, 0xfc, 0x27, 0x00, 0x00, 0xff, 0xff, 0x95, 0x97, 0x48, 0xb7,
	0x19, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ACFTSClient is the client API for ACFTS service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ACFTSClient interface {
	Sign(ctx context.Context, in *SignRequest, opts ...grpc.CallOption) (*SignReply, error)
}

type aCFTSClient struct {
	cc grpc.ClientConnInterface
}

func NewACFTSClient(cc grpc.ClientConnInterface) ACFTSClient {
	return &aCFTSClient{cc}
}

func (c *aCFTSClient) Sign(ctx context.Context, in *SignRequest, opts ...grpc.CallOption) (*SignReply, error) {
	out := new(SignReply)
	err := c.cc.Invoke(ctx, "/proto.ACFTS/Sign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ACFTSServer is the server API for ACFTS service.
type ACFTSServer interface {
	Sign(context.Context, *SignRequest) (*SignReply, error)
}

// UnimplementedACFTSServer can be embedded to have forward compatible implementations.
type UnimplementedACFTSServer struct {
}

func (*UnimplementedACFTSServer) Sign(ctx context.Context, req *SignRequest) (*SignReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sign not implemented")
}

func RegisterACFTSServer(s *grpc.Server, srv ACFTSServer) {
	s.RegisterService(&_ACFTS_serviceDesc, srv)
}

func _ACFTS_Sign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ACFTSServer).Sign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ACFTS/Sign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ACFTSServer).Sign(ctx, req.(*SignRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ACFTS_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ACFTS",
	HandlerType: (*ACFTSServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sign",
			Handler:    _ACFTS_Sign_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "acfts.proto",
}
